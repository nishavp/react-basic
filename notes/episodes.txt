/**----THIS FILE IS FOR SELF FOR REMEMBER THINGS IN FUTURE----**/
Notes of Episodes 4 , 5 , 6 , 7 , 8

# EPISODE 4 
Project - Food Ordering Website 
Structure of Project (Main Components) 

- Header
    - Logo
    - Menu Items 
- Body 
    - Search 
    - Restaurant Container (It will have all cards item) 
- Footer 
    - copyright 
    - Address 
    - Contact Information 


# Created basic Food Ordering Website 
API - https://www.swiggy.com/dapi/restaurants/list/v5?lat=19.0759837&lng=72.8776559&page_type=DESKTOP_WEB_LISTING 


# EPISODE 5 
# Two types Export/Import 
- Default Export/Import 
    - export default ComponentName 
    - import ComponentName from "/path"

- Named Export/Import 
    - export const ComponentName 
    - import {ComponentName} from "/path" 

# React Hooks 
- There are normal js functions written by facebook developers 
- Code is written in utility functions 
- Two very important hooks 
    - useState() 
        - use to create state variable in react 
        - IMP Point - whenever a state variable updates react re-render the components very fast 
    - useEffect() 
        - Its a hook which is normal javascript function 
        - Take 2 parameter [callback function and dependency array]
        - After every render the react will call the function which is mention in useEffect() 
        - Re-render happens when any state changes or props changes
        - So if we pass nothing in useEffect() => it will be called after every render 
        - If we pass empty array => it will call only once after render 
        - If we pass any state variable => then it will be call everytime when the state variable changes 

# React Fibre 
- Link : https://github.com/acdlite/react-fiber-architecture 

# EPISODE 6 
- API call 
- created shimmer UI - a loading components before the actual data loads from the API


# EPISODE 7 
- React Router
- Doc : https://reactrouter.com/en/main
- Outlet is used to pass component between Header and Footer 
- UseParams - to read dynamic url 


# EPISODE 8 
- Class Based Components 
- this.state.name == display the state variable value 
- this.props.date == display the props variable value 
- componentDidMount 
- componentWillUnmount 
- componentDidUpdate 
- Class Based Component Recycle 
    - Render Phase 
    - Commit Phase 


# EPISODE 9 
- created helper.js file to keep all common functions which can be reuseable in other component 
- We can create separate file for Hooks - also that will make our code in maintainable 
- Always start with "use" keyword as React Naming Convention eg useRestaurant 
- Feature - To check internet connection 
- Optimize Our App 
- Create small bundles (Also called by below names)
    - Chunking 
    - Code Spliting 
    - Dynamic Import 
    - Dynamic Bundling 
    - Lazy Loading 
    - On Demand Loading 
- Use of lazy and Suspense - Dynamic Loading 
- Suspense - takes a fallback parameter. In that we can show shimmer tills the component loads fully.

